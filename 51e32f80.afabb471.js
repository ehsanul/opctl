(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{165:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return s}));var r=n(1),i=n(9),a=(n(0),n(216)),c={title:"Dir"},l={id:"reference/opspec/types/dir",title:"Dir",description:"Dir typed values are a filesystem directory entry.",source:"@site/docs/reference/opspec/types/dir.md",permalink:"/docs/reference/opspec/types/dir",editUrl:"https://github.com/opctl/opctl/edit/main/website/docs/reference/opspec/types/dir.md",lastUpdatedBy:"Chris Dostert",lastUpdatedAt:1605586799,sidebar:"docs",previous:{title:"Boolean",permalink:"/docs/reference/opspec/types/boolean"},next:{title:"File",permalink:"/docs/reference/opspec/types/file"}},o=[{value:"Initialization",id:"initialization",children:[]},{value:"Entry Referencing",id:"entry-referencing",children:[]}],p={rightToc:o},b="wrapper";function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)(b,Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Dir typed values are a filesystem directory entry."),Object(a.b)("p",null,"Dirs..."),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"are mutable, i.e. making changes to a directory results in the directory being changed everywhere it's referenced."),Object(a.b)("li",{parentName:"ul"},"can be passed in/out of ops via ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"/docs/reference/opspec/op-directory/op/parameter/dir"}),"dir parameters"),"."),Object(a.b)("li",{parentName:"ul"},"can be initialized via ",Object(a.b)("a",Object(r.a)({parentName:"li"},{href:"#initialization"}),"dir initialization")),Object(a.b)("li",{parentName:"ul"},"are not coercible to any other type.")),Object(a.b)("h3",{id:"initialization"},"Initialization"),Object(a.b)("p",null,"Dir typed values can be constructed from a literal or templated object."),Object(a.b)("p",null,"A templated object is an object which includes one or more ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"/docs/reference/opspec/op-directory/op/variable-reference"}),"variable-reference [string]"),".\nAt runtime, each reference gets evaluated and replaced with it's corresponding value."),Object(a.b)("h4",{id:"initialization-example-literal"},"Initialization Example (literal)"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"myLiteralDir:\n    /singleLineFile:\n      data: contents of /childFile1\n    /subDir:\n      /multilineFile:\n        data: |\n          multiline\n          contents of /childFile2\n    /emptySubDir: {}\n")),Object(a.b)("h4",{id:"initialization-example-templated"},"Initialization Example (templated)"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"myTemplatedDir:\n    /childFile:\n      data: $(someVariable)\n")),Object(a.b)("h3",{id:"entry-referencing"},"Entry Referencing"),Object(a.b)("p",null,"Dir entries (child files/directories) can be referenced via ",Object(a.b)("inlineCode",{parentName:"p"},"$(ROOT/ENTRY)")," syntax."),Object(a.b)("h4",{id:"entry-referencing-example-embedded"},"Entry Referencing Example (embedded)"),Object(a.b)("p",null,"given:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"file1.json")," exists in op")),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"$(./file1.json)\n")),Object(a.b)("h4",{id:"entry-referencing-example-scope"},"Entry Referencing Example (scope)"),Object(a.b)("p",null,"given:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("inlineCode",{parentName:"li"},"someDir"),Object(a.b)("ul",{parentName:"li"},Object(a.b)("li",{parentName:"ul"},"is in scope dir"),Object(a.b)("li",{parentName:"ul"},"contains ",Object(a.b)("inlineCode",{parentName:"li"},"file2.txt"))))),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-yaml"}),"$(someDir/file2.txt)\n")))}s.isMDXComponent=!0},216:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return f}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),b=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},s=function(e){var t=b(e.components);return(i.a.createElement(p.Provider,{value:t},e.children))},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),s=b(n),u=r,m=s["".concat(c,".").concat(u)]||s[u]||d[u]||a;return n?i.a.createElement(m,l({ref:t},p,{components:n})):i.a.createElement(m,l({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,c=new Array(a);c[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:r,c[1]=l;for(var p=2;p<a;p++)c[p]=n[p];return i.a.createElement.apply(null,c)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);